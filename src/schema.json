{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/example.json",
  "type": "object",
  "default": {},
  "title": "Root Schema",
  "required": ["pipeline"],
  "properties": {
    "pipeline": {
      "type": "array",
      "default": [],
      "title": "The pipeline Schema",
      "items": {
        "type": "object",
        "title": "A Schema",
        "required": ["action", "params"],
        "patternProperties": {
          "^|$|": {
            "type": "object",
            "properties": {
              "fnKey": {
                "type": "string",
                "default": "",
                "title": "The fnKey Schema",
                "examples": ["concatText", "mathOperation"]
              }
            }
          }
        },
        "properties": {
          "action": {
            "type": "string",
            "description": "The action Schema",
            "enum": [
              "elementsAggregation",
              "registerElement",
              "updateElementById",
              "removeElementById"
            ]
          },
          "outputAlias": {
            "type": "string",
            "description": "The outputAlias Schema",
            "examples": [
              "elementsAggregationOutput",
              "registerElementOutput",
              "updateElementByIdOutput",
              "removeElementByIdOutput",
              "resolveFirstElementOfOutputArrayOutput"
            ]
          },
          "params": {
            "type": "object",
            "description": "The params Schema",
            "properties": {},
            "examples": []
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {
                "action": { "const": "elementsAggregation" }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "required": ["modelKey", "aggregationPipeline"],
                  "properties": {
                    "modelKey": {
                      "type": "string",
                      "description": "The model name",
                      "examples": ["modelName"]
                    },
                    "aggregationPipeline": {
                      "type": "array",
                      "description": "The agregation pipeline",
                      "examples": [
                        [],
                        [
                          {
                            "$match": {
                              "|$|_id": {
                                "fnKey": "parseData",
                                "params": {
                                  "type": "objectid",
                                  "|&|data": "&.clientParams.id"
                                }
                              }
                            }
                          }
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "action": { "const": "registerElement" }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "required": ["modelKey", "mappingSetup"],
                  "properties": {
                    "modelKey": {
                      "type": "string",
                      "description": "The model name",
                      "examples": ["modelName"]
                    },
                    "mappingSetup": {
                      "type": "object",
                      "description": "The mapping setup",
                      "examples": [
                        {
                          "|&|param1": "&.clientParams.param1",
                          "|&|param2": "&.clientParams.param2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "action": { "const": "updateElementById" }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "required": ["modelKey", "itemId", "updateData"],
                  "properties": {
                    "modelKey": {
                      "type": "string",
                      "description": "The model name",
                      "examples": ["modelName"]
                    },
                    "itemId": {
                      "type": "string",
                      "description": "The item id",
                      "examples": ["&.clientParams.id"]
                    },
                    "updateData": {
                      "type": "object",
                      "description": "The update data",
                      "examples": [
                        {
                          "|&|param1": "&.clientParams.param1",
                          "|&|param2": "&.clientParams.param2"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          {
            "if": {
              "properties": {
                "action": { "const": "removeElementById" }
              }
            },
            "then": {
              "properties": {
                "params": {
                  "required": ["modelKey", "itemId"],
                  "properties": {
                    "modelKey": {
                      "type": "string",
                      "description": "The model name",
                      "examples": ["modelName"]
                    },
                    "itemId": {
                      "type": "string",
                      "description": "The item id",
                      "examples": ["&.clientParams.id"]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "examples": [
        [
          {
            "action": "elementsAggregation",
            "outputAlias": "elementsAggregationOutput",
            "params": {
              "modelKey": "modelName",
              "aggregationPipeline": []
            }
          }
        ],
        [
          {
            "action": "registerElement",
            "outputAlias": "registerElementOutput",
            "params": {
              "modelKey": "modelName",
              "mappingSetup": {
                "|&|param1": "&.clientParams.param1",
                "|&|param2": "&.clientParams.param2"
              }
            }
          }
        ],
        [
          {
            "action": "updateElementById",
            "outputAlias": "updateElementByIdOutput",
            "params": {
              "modelKey": "modelName",
              "itemId": "&.clientParams.id",
              "updateData": {
                "|&|param1": "&.clientParams.param1",
                "|&|param2": "&.clientParams.param2"
              }
            }
          }
        ],
        [
          {
            "action": "removeElementById",
            "outputAlias": "removeElementByIdOutput",
            "params": {
              "modelKey": "modelName",
              "itemId": "&.clientParams.id"
            }
          }
        ]
      ]
    }
  },
  "examples": [
    {
      "schema": {},
      "pipeline": [
        {
          "action": "elementsAggregation",
          "outputAlias": "elementsAggregationOutput",
          "params": {
            "modelKey": "modelName",
            "aggregationPipeline": []
          }
        }
      ]
    },
    {
      "schema": {},
      "pipeline": [
        {
          "action": "registerElement",
          "outputAlias": "registerElementOutput",
          "params": {
            "modelKey": "modelName",
            "mappingSetup": {
              "|&|param1": "&.clientParams.param1",
              "|&|param2": "&.clientParams.param2"
            }
          }
        }
      ]
    },
    {
      "schema": {},
      "pipeline": [
        {
          "action": "updateElementById",
          "outputAlias": "updateElementByIdOutput",
          "params": {
            "modelKey": "modelName",
            "itemId": "&.clientParams.id",
            "updateData": {
              "|&|param1": "&.clientParams.param1",
              "|&|param2": "&.clientParams.param2"
            }
          }
        }
      ]
    },
    {
      "schema": {},
      "pipeline": [
        {
          "action": "removeElementById",
          "outputAlias": "removeElementByIdOutput",
          "params": {
            "modelKey": "modelName",
            "itemId": "&.clientParams.id"
          }
        }
      ]
    }
  ]
}
